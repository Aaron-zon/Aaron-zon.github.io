import{ax as a,A as s,aQ as i,z as r}from"./chunks/framework.BWRXlwpK.js";const k=JSON.parse('{"title":"Border","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"css/css3-border.md","filePath":"css/css3-border.md"}'),d={name:"css/css3-border.md"};function t(o,e,h,n,l,p){return r(),s("div",null,e[0]||(e[0]=[i(`<h1 id="border" tabindex="-1">Border <a class="header-anchor" href="#border" aria-label="Permalink to &quot;Border&quot;">​</a></h1><h2 id="border-radius" tabindex="-1">border-radius <a class="header-anchor" href="#border-radius" aria-label="Permalink to &quot;border-radius&quot;">​</a></h2><p>圆角，根据元素宽高像素进行改变</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 10px 5px 5px 10px;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 左上 右上 右下 左下 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 10px 5px 10px;       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 左上 右上坐下 右下 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 10px 5px;            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 上 下 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 10px;                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 上下左右 */</span></span></code></pre></div><h2 id="border-image" tabindex="-1">border-image <a class="header-anchor" href="#border-image" aria-label="Permalink to &quot;border-image&quot;">​</a></h2><p><code>border-image</code> 边框背景，可拆分为 <code>source</code> <code>slice</code> <code>width</code> <code>outset</code> <code>repeat</code></p><h3 id="border-image-source" tabindex="-1">border-image-source <a class="header-anchor" href="#border-image-source" aria-label="Permalink to &quot;border-image-source&quot;">​</a></h3><p>填充物</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-image-source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: url(</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">image</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.png</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 填充图片 */</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-image-source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: linear-gradient(颜色1, 颜色2); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 填充渐变色 */</span></span></code></pre></div><h3 id="border-image-slice" tabindex="-1">border-image-slice <a class="header-anchor" href="#border-image-slice" aria-label="Permalink to &quot;border-image-slice&quot;">​</a></h3><p><code>border-image-slice</code> 属性将使用 <code>source</code> 引入的填充物划分为多个区域。这些区域共通组成了边框图像。</p><h3 id="border-image-width" tabindex="-1">border-image-width <a class="header-anchor" href="#border-image-width" aria-label="Permalink to &quot;border-image-width&quot;">​</a></h3><p><code>border-image-width</code> 属性指定了 边界图像 (border image) 的宽度</p><h3 id="border-image-outset" tabindex="-1">border-image-outset <a class="header-anchor" href="#border-image-outset" aria-label="Permalink to &quot;border-image-outset&quot;">​</a></h3><p><code>border-image-outset</code> 属性定义边框图像可超出边框盒的大小。</p><h3 id="border-image-repeat" tabindex="-1">border-image-repeat <a class="header-anchor" href="#border-image-repeat" aria-label="Permalink to &quot;border-image-repeat&quot;">​</a></h3><p><code>border-image-repeat</code> 定义图片如何填充边框。或为单个值，设置所有的边框；或为两个值，分别设置水平与垂直的边框。</p>`,17)]))}const b=a(d,[["render",t]]);export{k as __pageData,b as default};
