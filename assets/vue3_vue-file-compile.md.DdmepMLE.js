import{_ as o,c as a,a0 as c,o as t}from"./chunks/framework.P9qPzDnn.js";const v=JSON.parse('{"title":"Vue 文件编译","description":"","frontmatter":{},"headers":[],"relativePath":"vue3/vue-file-compile.md","filePath":"vue3/vue-file-compile.md"}'),d={name:"vue3/vue-file-compile.md"};function i(r,e,l,u,n,p){return t(),a("div",null,e[0]||(e[0]=[c('<h1 id="vue-文件编译" tabindex="-1">Vue 文件编译 <a class="header-anchor" href="#vue-文件编译" aria-label="Permalink to &quot;Vue 文件编译&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>参考<a href="https://vue-compiler.iamouyang.cn/" target="_blank" rel="noreferrer">Vue3 编译原理揭秘</a>。</p><p>因为浏览器无法直接使用 <code>Vue</code> 文件，所以需要编译为 <code>JavaScript</code> 文件。</p><p>在 <code>Webpack</code> 中，是通过 <code>vue-loader</code> 插件实现。而在 <code>Vite</code> 中，则是通过 <code>@vitejs/plugin-vue</code> 插件实现。</p><div class="info custom-block"><p class="custom-block-title">编译时的入口文件</p><p>在 <code>Vue3</code> 项目进行编译时，入口文件是 <code>vite.config.ts</code>，在这个文件中会引入 <code>@vitejs/plugin-vue</code>，并执行方法 <code>vuePlugin</code>。</p><p>当用户打开画面时，会从 <code>src/main.ts</code> 开始加载，没个被加载的文件会调用 <code>vuePlugin</code> 中的 <code>transform</code> 方法。</p></div><h2 id="调试源码" tabindex="-1">调试源码 <a class="header-anchor" href="#调试源码" aria-label="Permalink to &quot;调试源码&quot;">​</a></h2><p>在了解 <code>Vue</code> 文件编译时，需要深入查看源码。</p><p>可以在 VsCode 中进行 <code>Debug</code>，来了解程序执行的过程。</p>',9)]))}const m=o(d,[["render",i]]);export{v as __pageData,m as default};
