import{_ as d,c as e,a0 as s,o as a}from"./chunks/framework.P9qPzDnn.js";const k=JSON.parse('{"title":"CSS 常用样式与单位","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"css/css-base-style.md","filePath":"css/css-base-style.md"}'),i={name:"css/css-base-style.md"};function r(l,t,n,p,o,h){return a(),e("div",null,t[0]||(t[0]=[s(`<h1 id="css-常用样式与单位" tabindex="-1">CSS 常用样式与单位 <a class="header-anchor" href="#css-常用样式与单位" aria-label="Permalink to &quot;CSS 常用样式与单位&quot;">​</a></h1><h2 id="常用样式" tabindex="-1">常用样式 <a class="header-anchor" href="#常用样式" aria-label="Permalink to &quot;常用样式&quot;">​</a></h2><p>仅写一些项目中常用的使用方式，并不标准，详细查阅</p><p>参考<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS" target="_blank" rel="noreferrer">MDN CSS</a>。</p><table tabindex="0"><thead><tr><th>名称</th><th>描述</th><th>常用值/可用值</th></tr></thead><tbody><tr><td>list-style</td><td>用于取消 li 的前缀图形</td><td>none</td></tr><tr><td>line-height</td><td>行高，常用于让文字垂直具中</td><td>容器高度</td></tr><tr><td>display</td><td>改变元素类型</td><td>inline-block / flex</td></tr><tr><td>font-weight</td><td>字体粗细</td><td>100 ~ 900 / normal / lighter / bold / bolder</td></tr><tr><td>font-size</td><td>字体大小</td><td>px / rem / em</td></tr><tr><td>text-decoration</td><td>用来去除 a 标签的下划线，也可以用于添加各种文本修饰线</td><td>none</td></tr><tr><td>text-align</td><td>设置其下元素的水平对其方式</td><td>left / right / center</td></tr><tr><td>text-indent</td><td>设置首行缩进</td><td>px / em</td></tr><tr><td>letter-spacing</td><td>设置字符间距</td><td>px / em</td></tr><tr><td>float</td><td>设置元素浮动</td><td>left / right</td></tr><tr><td>clear</td><td>设置元素浮动</td><td>none / left / right / both</td></tr><tr><td>posstion</td><td>设置元素定位</td><td>relative / absolute / fixed</td></tr><tr><td>z-index</td><td>设置元素层级</td><td>1 ~ 10000</td></tr><tr><td>border</td><td>设置边框</td><td>1px solid #000</td></tr><tr><td>border-radius</td><td>设置圆角</td><td>px / %</td></tr><tr><td>border-spacing</td><td>设置边框间距</td><td>px / %</td></tr><tr><td>border-collapse</td><td>设置边框合并</td><td>collapse / separate</td></tr><tr><td>margin</td><td>设置外边距</td><td>0 0 0 0</td></tr><tr><td>padding</td><td>设置内边距</td><td>0 0 0 0</td></tr><tr><td>vertical-align</td><td>设置元素垂直对齐方式</td><td>top / bottom / middle</td></tr><tr><td>cursor</td><td>设置鼠标样式</td><td>pointer</td></tr><tr><td>overflow</td><td>设置元素溢出隐藏</td><td>hidden</td></tr><tr><td>opactiy</td><td>设置透明度</td><td>0 ~ 1</td></tr><tr><td>outline</td><td>用于取消 input 框点击后的边框样式</td><td>none</td></tr><tr><td>background-color</td><td>设置背景</td><td>#000 / rgba(0,0,0,0.5) / transparent</td></tr><tr><td>color</td><td>设置字体颜色</td><td>#000 / rgba(0,0,0,0.5) / transparent</td></tr></tbody></table><h2 id="px-em-rem-vw-vh" tabindex="-1">px / em / rem / vw / vh <a class="header-anchor" href="#px-em-rem-vw-vh" aria-label="Permalink to &quot;px / em / rem / vw / vh&quot;">​</a></h2><h3 id="px" tabindex="-1">px <a class="header-anchor" href="#px" aria-label="Permalink to &quot;px&quot;">​</a></h3><p><code>px</code> (pixel) 像素，是相对长度单位，PC 端 浏览器中最常用的基本单位。像素 px 是相对心啊时期屏幕分辨率而言的。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>也就是说如果屏幕分辨率是 2560 * 1080</p><p>那么 px 的最大宽度即是屏幕横向最大值 2560</p><p>最大高度即是屏幕竖向最大值 1080（因为浏览器还有工具栏导航栏部分因此不可能打到屏幕最大值）。</p></div><h3 id="em" tabindex="-1">em <a class="header-anchor" href="#em" aria-label="Permalink to &quot;em&quot;">​</a></h3><p><code>em</code> 是相对长度单位。相对与当前对象内文本字体尺寸（参考物是父元素的 font-size 属性），如果父元素没有设置 <code>font-size</code> 属性，那么会再向上寻找直至找到设有 <code>font-size</code> 的父元素，如果都没有会使用默认浏览器默认的 <code>font-size</code> 属性。</p><div class="tip custom-block"><p class="custom-block-title">小栗子</p><p><code>font-size: 16px;</code> 时 <code>1em = 16px</code></p><p><code>font-size: 32px;</code> 时 <code>1em = 32px</code></p></div><h3 id="rem" tabindex="-1">rem <a class="header-anchor" href="#rem" aria-label="Permalink to &quot;rem&quot;">​</a></h3><p><code>rem</code> 是 CSS3 新增的相对单位，rem 是相对于 HTML根元素的字体大小 （font-size）来计算的长度单位</p><p>如果没有设置 HTML 的字体大小，就会以浏览器默认的字体大小为基准（一般为 16px）。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 1rem = 32px */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="vw-vh" tabindex="-1">vw / vh <a class="header-anchor" href="#vw-vh" aria-label="Permalink to &quot;vw / vh&quot;">​</a></h3><p><code>vw</code>、<code>vh</code> 是基于视口的单位，它相当于百分比。</p><ul><li>vw：相对于视口宽度的百分比，1vw 等于视口宽度的 1%，1vw 等于 1% 的视口宽度。 <ul><li>假如浏览器的宽度为200px，那么 1vw 就等于 2px（200px/100）</li></ul></li><li>vh：相对于视口高度的百分比，1vh 等于视口高度的 1%，1vh 等于 1% 的视口高度。 <ul><li>假如浏览器的高度为500px，那么 1vh 就等于 5px（500px/100）</li></ul></li></ul>`,19)]))}const m=d(i,[["render",r]]);export{k as __pageData,m as default};
