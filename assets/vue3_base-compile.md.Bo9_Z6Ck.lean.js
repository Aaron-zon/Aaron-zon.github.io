import{_ as o,c as a,a0 as c,o as l}from"./chunks/framework.UCJAoCzn.js";const n=JSON.parse('{"title":"baseCompile 函数","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"vue3/base-compile.md","filePath":"vue3/base-compile.md"}'),i={name:"vue3/base-compile.md"};function t(d,e,r,m,p,s){return l(),a("div",null,e[0]||(e[0]=[c('<h1 id="basecompile-函数" tabindex="-1">baseCompile 函数 <a class="header-anchor" href="#basecompile-函数" aria-label="Permalink to &quot;baseCompile 函数&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>了解 <code>compileTemplate</code> 函数是如何将 <code>template</code> 模块编译为 <code>render</code> 函数的。</p><h2 id="vue-下的几个包" tabindex="-1">@vue 下的几个包 <a class="header-anchor" href="#vue-下的几个包" aria-label="Permalink to &quot;@vue 下的几个包&quot;">​</a></h2><ul><li><code>@vue/compiler-sfc</code>：用于编译vue的SFC文件，这个包依赖<code>@vue/compiler-core</code>和<code>@vue/compiler-dom</code>，主要配合 <code>vue-loader</code> 或 <code>@vitejs/plugin-vue</code> 使用；</li><li><code>@vue/compiler-dom</code>：用于浏览器端的编译，用于处理 <code>DOM</code> 相关逻辑；</li><li><code>@vue/compiler-core</code>：vue编译部分的核心，提供编译逻辑，不管是浏览器端编译，还是服务器端编译，都是基于这个包实现；</li></ul><h2 id="vue-compiler-sfc-的-compiletemplate-函数" tabindex="-1"><code>@vue/compiler-sfc</code> 的 <code>compileTemplate</code> 函数 <a class="header-anchor" href="#vue-compiler-sfc-的-compiletemplate-函数" aria-label="Permalink to &quot;`@vue/compiler-sfc` 的 `compileTemplate` 函数&quot;">​</a></h2>',6)]))}const v=o(i,[["render",t]]);export{n as __pageData,v as default};
