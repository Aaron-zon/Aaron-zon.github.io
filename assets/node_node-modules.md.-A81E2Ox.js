import{_ as i,c as e,a0 as o,o as t}from"./chunks/framework.Db5sgsAJ.js";const c=JSON.parse('{"title":"基本内置模块","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"node/node-modules.md","filePath":"node/node-modules.md"}'),r={name:"node/node-modules.md"};function a(n,l,s,d,p,u){return t(),e("div",null,l[0]||(l[0]=[o('<h1 id="基本内置模块" tabindex="-1">基本内置模块 <a class="header-anchor" href="#基本内置模块" aria-label="Permalink to &quot;基本内置模块&quot;">​</a></h1><p><a href="https://nodejs.org/docs/latest/api/" target="_blank" rel="noreferrer">Node Api文档</a></p><ul><li>os：提供与操作系统相关的实用方法和属性 <ul><li>ELO：获取当前系统使用的换行符（windows和Linux的换行符不同）</li><li>arch()：获取CPU的架构名（x32、x64、arm、...）</li><li><strong>cpus()</strong>： 获取CPU信息，每一个核的信息汇总成一个数组</li><li>freemem()： 获取当前系统剩余内存大小</li><li>homedir()： 获取当前用户目录（windows一般为C:\\Users\\xxx）</li><li>hostname()： 获取当前主机名称</li><li><strong>tmpdir()</strong>： 获取临时文件目录</li></ul></li><li><strong>path</strong>：提供与路径相关的操作 <ul><li>basename(path[, ext])： 传入路径，获取路径的最后一部分</li><li>sep： 获取当前系统路径分隔符</li><li><strong>delimiter</strong>：提供特定于平台的路径分隔符 <ul><li>windows：<code>;</code></li><li>linux：<code>:</code></li></ul></li><li><strong>dirname(path)</strong>： 传入路径，获取最后一部分前的路径</li><li><strong>extname(path)</strong>： 传入路径，获取路径最后一部分的扩展名</li><li><strong>join(p1, p2, ...)</strong>： 传入多段路径，合并成完整路径</li><li>normalize(path)： 传入路径，获取符合操作系统标准的路径</li><li>relative(from, to)： 传入两个路径，获取from到to的相对路径</li><li>resolve(p1, p2, ...)： 传入多段路径，解析为绝对路径</li></ul></li><li>url：提供与url相关的操作 <ul><li>URL(path)： 传入路径，获取一个对路径解析后的对象（解析出协议、路径、端口、参数）</li><li>...</li></ul></li><li>util：提供与常用方法相关的操作 <ul><li>callbackify(original)：传入异步函数转换为回调函数形式</li><li>isDeepStrictEqual(val1, val2)：将传入的对象进行深度严格比较</li><li>promisify(original)：回调模式转为异步模式</li></ul></li><li>...</li></ul>',3)]))}const g=i(r,[["render",a]]);export{c as __pageData,g as default};
