import{_ as i,c as a,a2 as n,o as l}from"./chunks/framework.BLTIpkzl.js";const c=JSON.parse('{"title":"Nginx 介绍","description":"","frontmatter":{},"headers":[],"relativePath":"nginx/nginx-intro.md","filePath":"nginx/nginx-intro.md"}'),e={name:"nginx/nginx-intro.md"};function t(p,s,r,h,k,o){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="nginx-介绍" tabindex="-1">Nginx 介绍 <a class="header-anchor" href="#nginx-介绍" aria-label="Permalink to &quot;Nginx 介绍&quot;">​</a></h1><p>Nginx 是一个高性能的 HTTP 和反向代理服务器，并且支持邮件代理（IMAP/POP3/SMTP）。</p><h2 id="正向代理和反向代理" tabindex="-1">正向代理和反向代理 <a class="header-anchor" href="#正向代理和反向代理" aria-label="Permalink to &quot;正向代理和反向代理&quot;">​</a></h2><h3 id="正向代理" tabindex="-1">正向代理 <a class="header-anchor" href="#正向代理" aria-label="Permalink to &quot;正向代理&quot;">​</a></h3><p>正向代理（Forward Proxy），客户端（client）通过设置通过代理服务器（proxy）去访问远程的目标服务器（server）</p><p>| client - proxy | - server</p><p>特点：</p><ul><li>可以访问原来无法访问的资源（因为有的目标服务器可能是不对外开放，只对特定服务器开放）</li><li>做缓存加快访问速度</li><li>给客户端授权或记录访问信息等</li></ul><h2 id="反向代理" tabindex="-1">反向代理 <a class="header-anchor" href="#反向代理" aria-label="Permalink to &quot;反向代理&quot;">​</a></h2><p>反向代理（Reverse Proxy）：服务器通过代理服务接收连接请求，然后再转发给内部网络的服务器，将服务器的结果返回客户端。</p><p>client - | proxy - server |</p><p>特点：</p><ul><li>保证内网安全，阻止web攻击</li><li>负载均衡，提高服务器性能</li></ul><p>一句话概况：代理服务器站在客户端（客户能够感知），就是正向代理；代理服务器站在服务端一边（客户不感知）就是反向代理</p><h2 id="手动安装nginx" tabindex="-1">手动安装Nginx <a class="header-anchor" href="#手动安装nginx" aria-label="Permalink to &quot;手动安装Nginx&quot;">​</a></h2><p>设备：Centos 7</p><p>准备安装包：</p><ul><li>nginx：<a href="https://nginx.org/" target="_blank" rel="noreferrer">nginx.org</a></li><li>openssl：<a href="https://www.openssl-library.org/" target="_blank" rel="noreferrer">openssl-library.org</a></li><li>pcre：<a href="https://www.pcre.org/" target="_blank" rel="noreferrer">pcre.org</a></li><li>zlib：<a href="https://www.zlib.net/" target="_blank" rel="noreferrer">zlib.net</a></li></ul><ol><li>进行解压缩</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nginx-xxx.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssl-xxx.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pcre-xxx.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zlib-xxx.tar.gz</span></span></code></pre></div><p>2.下载相关依赖库</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载 perl 相关依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> perl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> perl-IPC-Cmd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> perl-core</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载  C 编译器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> groupinstall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Development Tools&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc-c++</span></span></code></pre></div><p>2.对 <code>openssl</code> 配置检查以及进行编译（其他的包也同理）</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssl-3.5.1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查 （pcre 使用 ./configure）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./config</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 编译</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p>对应路径</p><ul><li>nginx: /usr/local/nginx/ <ul><li>启动文件：/usr/local/nginx/sbin/nginx</li><li>配置文件：/usr/local/nginx/conf/nginx.conf</li><li>日志文件：/usr/local/nginx/logs/access.log</li><li>错误日志：/usr/local/nginx/logs/error.log</li><li>运行文件：/usr/local/nginx/logs/nginx.pid （存放进程ID）</li><li>缓存文件：/usr/local/nginx/cache/</li><li>模块文件：/usr/local/nginx/modules/</li><li>临时文件：/usr/local/nginx/temp/</li><li>静态文件：/usr/local/nginx/html/</li></ul></li></ul>`,26)]))}const d=i(e,[["render",t]]);export{c as __pageData,d as default};
