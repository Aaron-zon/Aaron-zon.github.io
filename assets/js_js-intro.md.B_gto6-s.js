import{_ as e,c as o,a0 as i,o as t}from"./chunks/framework.Db5sgsAJ.js";const u=JSON.parse('{"title":"JavaScript 介绍","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"js/js-intro.md","filePath":"js/js-intro.md"}'),r={name:"js/js-intro.md"};function l(p,a,s,c,n,d){return t(),o("div",null,a[0]||(a[0]=[i('<h1 id="javascript-介绍" tabindex="-1">JavaScript 介绍 <a class="header-anchor" href="#javascript-介绍" aria-label="Permalink to &quot;JavaScript 介绍&quot;">​</a></h1><p>底层基础决定上层建筑。</p><p>这里先介绍一下 JavaScript 的相关内容和背景。</p><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>1996年 <code>JavaScript</code> 作为解释型语言首次出现，作者 <code>Brendan Eich</code>。</p><p>他最初的设计目标是改善网页的用户体验。</p><p>起初 <code>JavaScript</code> 被命名为 <code>LiveScript</code>，后来和 <code>Sun公司</code>合作，因市场宣传需要改名为 <code>JavaScript</code>。</p><p><code>Sun公司</code> 后被 <code>Oracle</code> 收购，<code>JavaScript版权</code> 归 <code>Oracle</code> 所有。</p><h2 id="js-特点" tabindex="-1">Js 特点 <a class="header-anchor" href="#js-特点" aria-label="Permalink to &quot;Js 特点&quot;">​</a></h2><ul><li>解释型</li><li>单线程</li><li>弱类型</li></ul><h2 id="编译型和解释型" tabindex="-1">编译型和解释型 <a class="header-anchor" href="#编译型和解释型" aria-label="Permalink to &quot;编译型和解释型&quot;">​</a></h2><p>语言可分为 <code>编译型</code> 和 <code>解释型</code>，二者各有特点。</p><p><strong>有些语言既有编译型语言的特点也有解释型语言的特点。</strong></p><h3 id="编译型" tabindex="-1">编译型 <a class="header-anchor" href="#编译型" aria-label="Permalink to &quot;编译型&quot;">​</a></h3><p>编译型语言是一种在运行之前需要先通过 <strong>编译器</strong> 转换的编程语言。编译后的代码可以直接在目标平台上执行。</p><p>举个栗子：</p><p>就如同进行英文翻译，在将英文文档翻译成中文时，进行全文翻译，整理为中文文档后提交。</p><p><strong>典型</strong></p><ul><li>C</li><li>C++</li><li>Rust</li><li>Go</li><li>Swift</li><li>Java（有部分编译特性，先编译成字节码，运行时由JVM解释）：这里需要注意它不可以断定为编译型或解释型语言，因为它有两者的特点</li></ul><p><strong>重要特点</strong></p><ul><li>优点：运行速度快</li><li>缺点：移植性不好（不跨平台）</li></ul><h3 id="解释型" tabindex="-1">解释型 <a class="header-anchor" href="#解释型" aria-label="Permalink to &quot;解释型&quot;">​</a></h3><p>解释型语言是一种不需要 <strong>预先编译</strong> ，而是 <strong>逐行解释执行</strong> 的编程语言。代码在运行时由解释器逐行转换为机器码并执行，而不是一次性编译成可执行文件。</p><p><strong>举个栗子</strong></p><p>就如同同声传译，每阅读一句英文内容，就翻译出一句中文翻译。</p><p><strong>典型</strong></p><ul><li>JavaScript</li><li>Python</li><li>Ruby</li><li>PHP</li></ul><p><strong>特点</strong></p><ul><li>优点：跨平台</li><li>缺点：运行速度稍慢</li></ul><h2 id="web-发展史" tabindex="-1">Web 发展史 <a class="header-anchor" href="#web-发展史" aria-label="Permalink to &quot;Web 发展史&quot;">​</a></h2><p><strong>1990 年 <code>WorldWideWeb</code> 问世，作者：蒂姆伯纳斯-李（Tim Berners-Lee）。</strong></p><p>这是世界上首个网页浏览器（这时只能显示文字）。</p><p><strong>1993年 Mosaic问世</strong></p><p>这时世界首个可以普遍使用的网页浏览器（此外它还可以显示图片）。</p><p>它由伊利诺伊大学的 <code>NCSA组织</code> 在 1993年发布，并于 1997年1月7日 正式终止开发与支持。</p><p>拥有Mosaic版权的伊利诺伊大学将技术转让给了 Spy Glass公司。</p><p><strong>网景公司（马克安德森 和 &quot;硅图&quot;公司创始人 吉姆克拉克 共同于美国加州设立）</strong></p><p>网景公司聘用了多位Mosaic浏览器工程师，于1994年10月13日发布。</p><p>Mosaic Netscape 0.9 虽然仍是beta版本但却称为了当时最热门的浏览器，同年12月15日经过修正后的1.0正式版本发布，更名为：Netscape Navigator。</p><p>微软的IE 和 Mozilla Fierfox其早期版本皆是以Mosaic为基础而开发的，微软买下拥有Mosaic版权的Spy Glass公司，Mozilla Firefox是网景公司在 2003年 开放源代码后衍生出的版本。</p><h2 id="js-发展史" tabindex="-1">js 发展史 <a class="header-anchor" href="#js-发展史" aria-label="Permalink to &quot;js 发展史&quot;">​</a></h2><p>为取得技术支持微软推出JScript，CEnvi推出ScriptEase，与JavaScript同样可以在浏览器上运行，为了统一规格，JavaScript兼容ECMA标准，因此也称为ECMAScript。</p>',42)]))}const g=e(r,[["render",l]]);export{u as __pageData,g as default};
